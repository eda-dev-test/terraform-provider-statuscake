# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
archives:
- format: zip
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
before:
  hooks:
  - go mod download
builds:
- binary: '{{ .ProjectName }}_v{{ .Version }}'
  env:
  # goreleaser does not work with CGO, it could also complicate usage by users
  # in CI/CD systems like Terraform Cloud where they are unable to install
  # libraries.
  - CGO_ENABLED=0
  flags:
  - -trimpath
  ldflags:
  - '-s -w -X main.version={{ .Version }} -X main.commit={{ .Commit }}'
  goarch:
  - '386'
  - amd64
  - arm
  - arm64
  goos:
  - darwin
  - freebsd
  - linux
  - windows
  ignore:
  - goarch: '386'
    goos: darwin
  mod_timestamp: '{{ .CommitTimestamp }}'
changelog:
  skip: true
checksum:
  algorithm: sha256
  extra_files:
  - glob: 'terraform-registry-manifest.json'
    name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
release:
  extra_files:
  - glob: 'terraform-registry-manifest.json'
    name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
signs:
- artifacts: checksum
  args:
  # If you are using this in a GitHub action or some other automated pipeline,
  # you need to pass the batch flag to indicate its not interactive.
  - "--batch"
  - "--local-user"
  - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
  - "--output"
  - "${signature}"
  - "--detach-sign"
  - "${artifact}"
